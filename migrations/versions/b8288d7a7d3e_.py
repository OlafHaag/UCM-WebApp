"""empty message

Revision ID: b8288d7a7d3e
Revises: 
Create Date: 2020-06-09 21:00:26.215576

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'b8288d7a7d3e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('devices',
    sa.Column('id', sa.String(length=8), nullable=False, comment='Unique identifier for a device.'),
    sa.Column('screen_x', sa.Integer(), nullable=True, comment='Resolution of the horizontal axis of the screen'),
    sa.Column('screen_y', sa.Integer(), nullable=True, comment='Resolution of the vertical axis of the screen'),
    sa.Column('dpi', sa.Float(), nullable=True, comment='Pixel density of the display per inch.'),
    sa.Column('density', sa.Float(), nullable=True, comment='Density of the screen. This value is 1 by default on desktops but varies on android depending on the screen.'),
    sa.Column('aspect_ratio', sa.Float(), nullable=True, comment='Aspect ratio of the screen.'),
    sa.Column('size_x', sa.Float(), nullable=True, comment='Estimated horizontal size of the screen in centimeters.'),
    sa.Column('size_y', sa.Float(), nullable=True, comment='Estimated vertical size of the screen in centimeters.'),
    sa.Column('platform', sa.String(length=16), nullable=True, comment='Abbreviated identifier for operating system running on the device.'),
    sa.PrimaryKeyConstraint('id'),
    comment='This table holds in each row information about an individual device.'
    )
    op.create_table('users',
    sa.Column('id', sa.String(length=32), nullable=False, comment='Unique identifier for a user.'),
    sa.Column('device_id', sa.String(length=8), nullable=False, comment='Device used by user.'),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ),
    sa.PrimaryKeyConstraint('id'),
    comment='This table holds in each row information about a user.'
    )
    op.create_table('circletask_blocks',
    sa.Column('id', sa.Integer(), nullable=False, comment='Unique identifier for a block.'),
    sa.Column('user_id', sa.String(length=32), nullable=False, comment='User who performed the task.'),
    sa.Column('session_uid', sa.String(length=32), nullable=False, comment='The session a block belongs to. Sessions consist of consecutive blocks in a single run through the study.'),
    sa.Column('nth_session', sa.Integer(), nullable=False, comment='Chronological order of a session per user. How many times did a user upload data?'),
    sa.Column('nth_block', sa.Integer(), nullable=True, comment='Chronological order of a block within a session.'),
    sa.Column('treatment', sa.String(length=120), nullable=True, comment='Which degree of freedom had a constraint on it during a block. Independent variable.'),
    sa.Column('warm_up', sa.Float(), nullable=False, comment='Time before each trial to prepare, in seconds.'),
    sa.Column('trial_duration', sa.Float(), nullable=False, comment='Time given for performing the task for each trial, in seconds.'),
    sa.Column('cool_down', sa.Float(), nullable=False, comment='Time after each trial to give feedback, in seconds.'),
    sa.Column('time', sa.Float(), nullable=True, comment='Time at which a block was finished, in seconds since epoch.'),
    sa.Column('time_iso', sa.DateTime(), nullable=False, comment='Time at which a block was finished, in ISO format.'),
    sa.Column('hash', sa.String(length=32), nullable=False, comment='MD5 hash value for all the trials of a block. Used to check integrity of submitted data.'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('hash'),
    comment='This table holds in each row information about a block in the Circle Task study. Blocks can be associated with one another as belonging to the same session. A session is a single run through the study with all its consecutive blocks. Each block is comprised of trials.'
    )
    op.create_table('circletask_trials',
    sa.Column('id', sa.Integer(), nullable=False, comment='Unique identifier of a trial.'),
    sa.Column('user_id', sa.String(length=32), nullable=False, comment='User who performed the task.'),
    sa.Column('block_id', sa.Integer(), nullable=False, comment='The block a trial belongs to.'),
    sa.Column('trial', sa.Integer(), nullable=False, comment='Chronological order of trial within a block.'),
    sa.Column('df1', sa.Float(), nullable=True, comment='Value of degree of freedom 1 at end of trial. Dependent variable.'),
    sa.Column('df2', sa.Float(), nullable=True, comment='Value of degree of freedom 2 at end of trial. Dependent variable.'),
    sa.Column('df1_grab', sa.Float(), nullable=True, comment='Delta time in seconds after trial onset at which df1 slider was grabbed.'),
    sa.Column('df1_release', sa.Float(), nullable=True, comment='Delta time in seconds after trial onset at which df1 slider was released, either by the user or by the end of the countdown.'),
    sa.Column('df1_duration', sa.Float(), nullable=True, comment='Duration of the df1 grab, in seconds.'),
    sa.Column('df2_grab', sa.Float(), nullable=True, comment='Delta time in seconds after trial onset at which df2 slider was grabbed.'),
    sa.Column('df2_release', sa.Float(), nullable=True, comment='Delta time in seconds after trial onset at which df2 slider was released, either by the user or by the end of the countdown.'),
    sa.Column('df2_duration', sa.Float(), nullable=True, comment='Duration of the df2 grab, in seconds.'),
    sa.Column('sum', sa.Float(), nullable=True, comment='Sum of values for df1 and df2 at end of trial. Dependent variable.'),
    sa.ForeignKeyConstraint(['block_id'], ['circletask_blocks.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    comment='This table holds in each row information about the outcome of a single trial from the Circle Task study. Trials belong to a block, which are part of a complete run through the study.'
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('circletask_trials')
    op.drop_table('circletask_blocks')
    op.drop_table('users')
    op.drop_table('devices')
    # ### end Alembic commands ###
